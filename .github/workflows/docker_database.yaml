name: Docker Database Image CD

on:
  push:
    branches: [ "main" ]
    #paths:
    #  - 'database/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'database/**'

jobs:

  build:
    runs-on: ubuntu-latest
    environment: Docker

    steps:
    - uses: actions/checkout@v4

    # Get the latest version from Docker Hub
    - name: Get latest Docker image version
      id: get-latest-version
      env:
        DOCKER_REPOSITORY: ${{ env.DOCKER_DATABASE_REPOSITORY }}
      run: |
        sudo apt-get install -y jq
        LATEST_TAG=$(curl -s https://hub.docker.com/v2/repositories/$DOCKER_REPOSITORY/tags | \
          jq -r '.results | map(.name | select(test("^v[0-9]+$"))) | sort | last')
        echo "LATEST_TAG=$LATEST_TAG"
        if [ -z "$LATEST_TAG" ]; then
          NEW_TAG="v1"
        else
          NEW_TAG="v$(( ${LATEST_TAG#v} + 1 ))"
        fi
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push Docker image
    - name: Build and push Docker image
      env:
        DOCKER_REPOSITORY: ${{ env.DOCKER_DATABASE_REPOSITORY }}
        NEW_TAG: ${{ env.NEW_TAG }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      working-directory: ./database
      run: |
        docker build --build-arg POSTGRES_USER=$POSTGRES_USER \
               --build-arg POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
               --build-arg POSTGRES_DB=$POSTGRES_DB \
               --build-arg POSTGRES_PORT=$POSTGRES_PORT \
               -t $DOCKER_REPOSITORY:latest .
        docker tag $DOCKER_REPOSITORY:latest $DOCKER_REPOSITORY:$NEW_TAG
        docker push $DOCKER_REPOSITORY:latest
        docker push $DOCKER_REPOSITORY:$NEW_TAG
